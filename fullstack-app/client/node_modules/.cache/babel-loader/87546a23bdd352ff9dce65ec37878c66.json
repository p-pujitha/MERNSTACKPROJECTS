{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalWork\\\\MERNSTACKPROJECT\\\\fullstack-app\\\\client\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst context = React.createContext();\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        todos: prevState.todos.map(t => {\n          if (t.id === action.payload) {\n            t.complete = !t.complete;\n          }\n\n          ;\n          return t;\n        })\n      };\n\n    case \"REMOVE\":\n      return {\n        todos: prevState.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case \"ADD\":\n      return {\n        todos: [...prevState.todos, action.payload]\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [// {\n        //     id: 1,\n        //     title: \"check emails\",\n        //     complete: true\n        // },\n        // {\n        //     id: 2,\n        //     title: \"check voice\",\n        //     complete: false\n        // },\n        // {\n        //     id: 3,\n        //     title: \"check report\",\n        //     complete: false\n        // }\n      ],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/todos');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(context.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\nexport const Consumer = context.Consumer;","map":{"version":3,"sources":["D:/PersonalWork/MERNSTACKPROJECT/fullstack-app/client/src/context.js"],"names":["React","Component","axios","context","createContext","reducer","prevState","action","type","todos","map","t","id","payload","complete","filter","todo","Provider","state","dispatch","setState","componentDidMount","get","render","props","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AAAEC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AAAE,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAApB,EAA6B;AAAEF,YAAAA,CAAC,CAACG,QAAF,GAAa,CAACH,CAAC,CAACG,QAAhB;AAA0B;;AAAA;AAAE,iBAAOH,CAAP;AAAW,SAAjG;AAAT,OAAP;;AAEJ,SAAK,QAAL;AACI,aAAO;AAAEF,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBM,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACM,OAAlD;AAAT,OAAP;;AAEJ,SAAK,KAAL;AACI,aAAO;AAAEJ,QAAAA,KAAK,EAAE,CAAC,GAAGH,SAAS,CAACG,KAAd,EAAqBF,MAAM,CAACM,OAA5B;AAAT,OAAP;;AACJ;AAAS,aAAOP,SAAP;AATb;AAWH,CAZD;;AAcA,OAAO,MAAMW,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAEpCiB,KAFoC,GAE5B;AACJT,MAAAA,KAAK,EAAE,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfG,OADH;AAmBJU,MAAAA,QAAQ,EAAGZ,MAAD,IAAY,KAAKa,QAAL,CAAcd,SAAS,IAAID,OAAO,CAACC,SAAD,EAAYC,MAAZ,CAAlC;AAnBlB,KAF4B;AAAA;;AAwBpCc,EAAAA,iBAAiB,GAAE;AACfnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,QAAV;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKL,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKM,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAjCmC;AAoCxC,OAAO,MAAMC,QAAQ,GAAGvB,OAAO,CAACuB,QAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst context = React.createContext()\r\n\r\nconst reducer = (prevState, action) => {\r\n    switch (action.type) {\r\n        case \"TOGGLE\":\r\n            return { todos: prevState.todos.map(t => { if (t.id === action.payload) { t.complete = !t.complete }; return t; }) }\r\n\r\n        case \"REMOVE\":\r\n            return { todos: prevState.todos.filter(todo => todo.id !== action.payload) }\r\n\r\n        case \"ADD\":\r\n            return { todos: [...prevState.todos, action.payload]}\r\n        default: return prevState;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        todos: [\r\n            // {\r\n            //     id: 1,\r\n            //     title: \"check emails\",\r\n            //     complete: true\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     title: \"check voice\",\r\n            //     complete: false\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     title: \"check report\",\r\n            //     complete: false\r\n            // }\r\n        ],\r\n\r\n        dispatch: (action) => this.setState(prevState => reducer(prevState, action))\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/todos')\r\n    }\r\n    render() {\r\n        return (\r\n            <context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = context.Consumer\r\n"]},"metadata":{},"sourceType":"module"}